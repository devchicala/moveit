{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/devchicala/Documentos/meus projectos/ReactJS/moveit-next/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport GoogleLogin from \"react-google-login\";\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\nimport styles from \"../styles/pages/Main.module.css\";\nimport { useContext } from \"react\";\nexport var __N_SSP = true;\nexport default function Login() {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(ChallengesContext),\n      level = _useContext.level,\n      resetCookie = _useContext.resetCookie;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.profileContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: resetCookie,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"367909059268-n31pg5qnvj2qdtvjfsv2bv42ii0cmd55.apps.googleusercontent.com\",\n      buttonText: \"Login\",\n      onSuccess: function onSuccess(value) {\n        return _this.responseGoogle;\n      },\n      onFailure: function onFailure(value) {\n        return _this.responseGoogle;\n      },\n      cookiePolicy: \"single_host_origin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), console.log(function (value) {\n      return _this.responseGoogle;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"zkj1zug+Qt5+jjlexQpfvZOK5ro=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/devchicala/Documentos/meus projectos/ReactJS/moveit-next/src/pages/index.tsx"],"names":["GoogleLogin","ChallengesContext","styles","useContext","Login","level","resetCookie","profileContainer","value","responseGoogle","console","log"],"mappings":";;;;;AACA,OAAOA,WAAP,MAAwB,oBAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA;;AAAA,oBACCD,UAAU,CAACF,iBAAD,CADX;AAAA,MACtBI,KADsB,eACtBA,KADsB;AAAA,MACfC,WADe,eACfA,WADe;;AAG9B,sBACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACK,gBAAvB;AAAA,4BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAED,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAC,0EADX;AAEE,MAAA,UAAU,EAAC,OAFb;AAGE,MAAA,SAAS,EAAE,mBAACE,KAAD;AAAA,eAAW,KAAI,CAACC,cAAhB;AAAA,OAHb;AAIE,MAAA,SAAS,EAAE,mBAACD,KAAD;AAAA,eAAW,KAAI,CAACC,cAAhB;AAAA,OAJb;AAKE,MAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA,YAJF,EAWGC,OAAO,CAACC,GAAR,CAAY,UAACH,KAAD;AAAA,aAAW,KAAI,CAACC,cAAhB;AAAA,KAAZ,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlBuBL,K;;KAAAA,K","sourcesContent":["import { GetServerSideProps } from \"next\";\nimport GoogleLogin from \"react-google-login\";\n\nimport { ChallengesContext } from \"../contexts/ChallengesContext\";\n\nimport styles from \"../styles/pages/Main.module.css\";\nimport { useContext } from \"react\";\n\nexport default function Login() {\n  const { level, resetCookie } = useContext(ChallengesContext);\n\n  return (\n    <div className={styles.profileContainer}>\n      <button type=\"button\" onClick={resetCookie}>\n        Login with Google\n      </button>\n      <GoogleLogin\n        clientId=\"367909059268-n31pg5qnvj2qdtvjfsv2bv42ii0cmd55.apps.googleusercontent.com\"\n        buttonText=\"Login\"\n        onSuccess={(value) => this.responseGoogle}\n        onFailure={(value) => this.responseGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      />\n      {console.log((value) => this.responseGoogle)}\n    </div>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (cnt) => {\n  const { level, currentExperience, challengesCompleted } = cnt.req.cookies;\n\n  return {\n    props: {\n      level: Number(level),\n      currentExperience: Number(currentExperience),\n      challengesCompleted: Number(challengesCompleted),\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}